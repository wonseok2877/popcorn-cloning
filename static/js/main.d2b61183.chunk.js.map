{"version":3,"sources":["context/InfoContext.js","apis/tmdb.js","apis/movieApi.js","apis/tvApi.js","components/contentBox/RelativeDiv.js","components/contentBox/AbsoluteDiv.js","components/contentBox/Star.js","components/title/CinzelText.js","components/contentBox/PosterImage.js","components/contentBox/ContentBox.js","components/ContentsContainer.js","components/TextDate.js","components/TextGenre.js","components/TextOverview.js","components/title/CinzelTitle.js","components/detail/DetailContainer.js","components/detail/DetailPageContainer.js","components/title/CarterTitle.js","components/Loader.js","function/saveLocalHistory.js","components/FullScreenCenter.js","function/scrollSmooth.js","pages/DetailPage.js","components/navbar/NavLinkBox.js","components/navbar/NavBar.js","components/PageContainer.js","components/sideBar/PopcornImage.js","components/sideBar/PopcornImageWrapper.js","components/sideBar/SortButton.js","components/sideBar/TextSortBy.js","components/sideBar/SortList.js","components/sideBar/SortListWrapper.js","components/sideBar/SideBar.js","hooks/useContentsReducer.js","pages/MoviePage.js","apis/peopleApi.js","pages/PeoplePage.js","pages/TVPage.js","pages/UserPage.js","pages/SearchPage.js","pages/PersonPage.js","components/header/HeaderWrapper.js","components/header/Logo.js","components/header/SearchForm.js","components/header/index.js","components/header/Header.js","Router.js","App.js","index.js"],"names":["infoContext","createContext","InfoContextProvider","props","useState","globalFocus","setGlobalFocus","Provider","value","children","tmdbAxios","axios","create","baseURL","params","api_key","movieApi","nowPlaying","page","get","upComing","topRated","popular","movieById","id","append_to_response","search","teeeeeerm","query","allGenres","keywordsById","credits","similarById","discoverByKeyword","with_keywords","discoverByGenre","with_genres","tvApi","airingToday","tvById","RelativeDiv","className","AbsoluteDiv","Star","voteNumber","voteAverage","fullStarNumber","Math","floor","restStar","starArray","i","push","CinzelText","style","fontFamily","PosterImage","poster_path","imageSize","src","alt","width","height","onLoad","event","target","opacity","backgroundColor","ContentBox","content","title","name","vote_average","vote_count","release_date","first_air_date","contentType","console","log","to","length","substring","ContentsContainer","TextDate","TextGenre","TextOverview","CinzelTitle","DetailContainer","detail","last_air_date","genres","overview","videos","backdrop_path","homepage","production_companies","tagline","runtime","episode_run_time","seasons","creditList","isVideoFocused","isCreditSelected","handleVideoClick","handleCreditClick","handleTagClick","isPulse","href","rel","logo_path","map","g","index","onClick","results","videoId","key","opts","playerVars","autoplay","cast","profile_path","original_name","DetailPageContainer","CarterTitle","Loader","saveLocalContentHistory","data","currentItem","localStorage","getItem","parsedItem","JSON","parse","find","item","unshift","jsonItem","stringify","setItem","newArr","Array","of","FullScreenCenter","scrollSmooth","top","window","scroll","behavior","DetailPage","useParams","pathname","useLocation","setDetail","similarList","setSimilar","keywords","setKewords","listByKeyword","setListByKeyword","setCreditList","setIsVideoFocused","setIsPulse","currentContent","setCurrentContent","setIsCreditSelected","useContext","tagDivRef","useRef","useEffect","a","includes","Error","fetchData","setTimeout","handleKeywordClick","keywordId","keywordName","filter","Helmet","current","offsetTop","scrollHeight","ref","k","NavLinkBox","NavBar","PageContainer","PopcornImage","PopcornImageWrapper","setIsSideBarOpen","isSideBarOpen","onMouseEnter","SortButton","handleClick","isCurrent","TextSortBy","SortList","requestAndDispatch","sortType","genre","SortListWrapper","onMouseLeave","SideBar","initialState","useContentsReducer","useReducer","state","action","type","dispatch","MoviePage","setGenres","handleScroll","innerHeight","scrollY","document","body","offsetHeight","switchByType","addEventListener","removeEventListener","message","genreName","peopleApi","images","movieCredits","PeoplePage","setPage","peopleResults","setPeopleResults","prev","person","TVPage","setIsMovie","t","UserPage","movieHistory","tvHistory","SearchPage","movieResults","setMovieResults","tvResults","setTvResults","loading","setLoading","term","movie","tv","m","PersonPage","details","setDetails","philmography","setPhilmography","arrByPopularity","sort","b","popularity","place_of_birth","biography","HeaderWrapper","Logo","SearchForm","inputText","setInputText","isSearchBar","setIsSearchBar","inputRef","history","useHistory","listen","location","focus","handleEvent","focusOut","submit","preventDefault","change","keyDown","clickImoticon","onSubmit","e","onChange","onKeyDown","placeholder","spellCheck","Header","class","Router","exact","path","component","from","App","InfoContext","element","container","querySelector","reactDom","render"],"mappings":"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","file":"static/js/main.d2b61183.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const infoContext = createContext();\r\n\r\n/* Context API 개념\r\n? : createContext()의 기능은?\r\n? : Provider method의 기능은? */\r\n\r\nconst InfoContextProvider = (props) => {\r\n  const [globalFocus, setGlobalFocus] = useState(\"MOVIE\");\r\n  return (\r\n    <infoContext.Provider value={{ globalFocus, setGlobalFocus }}>\r\n      {props.children}\r\n    </infoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default InfoContextProvider;\r\n","import axios from \"axios\";\r\n\r\n/* 로직\r\n1. axios.create : axios instance를 생성한다.\r\n2. baseURL : tmdb사이트에서 api 제공하는 endpoint를 그대로 assign\r\n3. params : API를 가져오는데 필요한 정보들을 넣어준다. \r\n? : language라는 params도 있는데, 여러가지 언어로 만들어보고 싶다. */\r\n\r\nexport const tmdbAxios = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"bd4caebde93cff205b912a48554bbd5e\",\r\n  },\r\n});\r\n","import { tmdbAxios } from \"./tmdb\";\r\n\r\nconst movieApi = {\r\n  // 페이지 숫자를 인자값으로 받아서\r\n  nowPlaying: (page) =>\r\n    tmdbAxios.get(\"movie/now_playing\", {\r\n      params: {\r\n        page,\r\n      },\r\n    }),\r\n  upComing: (page) =>\r\n    tmdbAxios.get(\"movie/upcoming\", {\r\n      params: {\r\n        page,\r\n      },\r\n    }),\r\n  topRated: (page) =>\r\n    tmdbAxios.get(\"movie/top_rated\", {\r\n      params: {\r\n        page,\r\n      },\r\n    }),\r\n  popular: (page) =>\r\n    tmdbAxios.get(\"movie/popular\", {\r\n      params: {\r\n        page,\r\n      },\r\n    }),\r\n  movieById: (id) =>\r\n    tmdbAxios.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (teeeeeerm, page) =>\r\n    tmdbAxios.get(\"search/movie\", {\r\n      params: {\r\n        query: teeeeeerm,\r\n        page,\r\n      },\r\n    }),\r\n  allGenres: () => tmdbAxios.get(\"/genre/movie/list\"),\r\n  keywordsById: (id) => tmdbAxios.get(`movie/${id}/keywords`),\r\n  credits: (id) => tmdbAxios.get(`/movie/${id}/credits`),\r\n  similarById: (id, page) =>\r\n    tmdbAxios.get(`/movie/${id}/similar`, {\r\n      params: {\r\n        page,\r\n      },\r\n    }),\r\n  discoverByKeyword: (with_keywords) =>\r\n    tmdbAxios.get(\"discover/movie\", {\r\n      params: {\r\n        with_keywords,\r\n      },\r\n    }),\r\n  discoverByGenre: (with_genres, page) =>\r\n    tmdbAxios.get(\"discover/movie\", {\r\n      params: {\r\n        with_genres,\r\n        page,\r\n      },\r\n    }),\r\n};\r\n\r\nexport default movieApi;\r\n","import { tmdbAxios } from \"./tmdb\";\r\n\r\nconst tvApi = {\r\n  topRated: (page) =>\r\n    tmdbAxios.get(\"tv/top_rated\", {\r\n      params: {\r\n        page,\r\n      },\r\n    }),\r\n  popular: (page) =>\r\n    tmdbAxios.get(\"tv/popular\", {\r\n      params: {\r\n        page,\r\n      },\r\n    }),\r\n  airingToday: (page) =>\r\n    tmdbAxios.get(\"tv/airing_today\", {\r\n      params: {\r\n        page,\r\n      },\r\n    }),\r\n  tvById: (id, page) =>\r\n    tmdbAxios.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n        page,\r\n      },\r\n    }),\r\n  search: (query, page) =>\r\n    tmdbAxios.get(\"search/tv\", {\r\n      params: {\r\n        query,\r\n        page,\r\n      },\r\n    }),\r\n  similarById: (id, page) =>\r\n    tmdbAxios.get(`tv/${id}/similar`, {\r\n      params: {\r\n        page,\r\n      },\r\n    }),\r\n  allGenres: () => tmdbAxios.get(\"/genre/tv/list\"),\r\n  keywordsById: (id) => tmdbAxios.get(`tv/${id}/keywords`),\r\n  credits: (id) => tmdbAxios.get(`tv/${id}/credits`),\r\n  discoverByKeyword: (with_keywords) =>\r\n    tmdbAxios.get(\"discover/tv\", {\r\n      params: {\r\n        with_keywords,\r\n      },\r\n    }),\r\n  discoverByGenre: (with_genres, page) =>\r\n    tmdbAxios.get(\"discover/tv\", {\r\n      params: {\r\n        with_genres,\r\n        page,\r\n      },\r\n    }),\r\n};\r\nexport default tvApi;\r\n","const RelativeDiv = (props) => {\r\n  return <div className=\"flex relative w-full mt-5\">{props.children}</div>;\r\n};\r\n\r\nexport default RelativeDiv;\r\n","const AbsoluteDiv = (props) => {\r\n  return (\r\n    <div className=\"flex flex-col justify-evenly items-center text-center text-4xl opacity-0 absolute w-full h-full bg-opacity-0 bg-black hover:opacity-100 hover:bg-opacity-70 transition-all ease-in-out duration-500\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AbsoluteDiv;\r\n","import React from \"react\";\r\n\r\nconst Star = ({ voteAverage }) => {\r\n  // 변수 정의.\r\n  // 로직 전제 : data로 온 별점이 10점만점임.\r\n  const voteNumber = voteAverage / 2;\r\n  const fullStarNumber = Math.floor(voteNumber);\r\n  const restStar = voteNumber - fullStarNumber >= 0.3;\r\n  // loop : 숫자만큼 별을 array에 넣는다.\r\n  let starArray = [];\r\n  for (let i = 0; i < fullStarNumber; i++) {\r\n    starArray.push(<i className=\"fas fa-star text-yellow-500\" key={i}></i>);\r\n  }\r\n  return (\r\n    <div>\r\n      {starArray}\r\n      {restStar && <i className=\"fas fa-star-half-alt text-yellow-500\"></i>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Star;\r\n","const CinzelText = ({ children }) => {\r\n  return <span style={{ fontFamily: \"Cinzel, serif\" }}>{children}</span>;\r\n};\r\n\r\nexport default CinzelText;\r\n","import React from \"react\";\r\n\r\nconst PosterImage = ({ poster_path, imageSize }) => {\r\n  return (\r\n    <>\r\n      {poster_path ? (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original/${poster_path}`}\r\n          alt=\"backdrop\"\r\n          style={{\r\n            width: imageSize,\r\n            height: imageSize * 1.5,\r\n          }}\r\n          onLoad={(event) => {\r\n            event.target.style.opacity = 100;\r\n          }}\r\n          className=\"opacity-0 transition-opacity ease-in-out duration-500\"\r\n        />\r\n      ) : (\r\n        <article\r\n          style={{\r\n            width: imageSize,\r\n            height: imageSize * 1.5,\r\n            backgroundColor: \"gray\",\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PosterImage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RelativeDiv from \"./RelativeDiv\";\r\nimport AbsoluteDiv from \"./AbsoluteDiv\";\r\nimport PropTypes from \"prop-types\";\r\nimport Star from \"./Star\";\r\nimport CinzelText from \"../title/CinzelText\";\r\nimport PosterImage from \"./PosterImage\";\r\n\r\nconst ContentBox = ({\r\n  content: {\r\n    id,\r\n    title,\r\n    name,\r\n    vote_average,\r\n    vote_count,\r\n    release_date,\r\n    first_air_date,\r\n    poster_path,\r\n  },\r\n  contentType,\r\n  imageSize,\r\n}) => {\r\n  console.log(contentType);\r\n  return (\r\n    <>\r\n      {contentType === \"MOVIE\" ? (\r\n        <Link to={`/movie/${id}`}>\r\n          <RelativeDiv>\r\n            <PosterImage poster_path={poster_path} imageSize={imageSize} />\r\n            <AbsoluteDiv>\r\n              <CinzelText>\r\n                {title.length > 30 ? title.substring(0, 30) + \"...\" : title}\r\n              </CinzelText>\r\n              <span>\r\n                {first_air_date\r\n                  ? first_air_date.substring(0, 4)\r\n                  : release_date?.substring(0, 4)}\r\n              </span>\r\n              <div>\r\n                <Star voteAverage={vote_average} />\r\n                {vote_count > 0 && (\r\n                  <span className=\"text-sm\">({vote_count})</span>\r\n                )}\r\n              </div>\r\n            </AbsoluteDiv>\r\n          </RelativeDiv>\r\n        </Link>\r\n      ) : (\r\n        contentType === \"TV_SHOWS\" && (\r\n          <Link to={`/tv/${id}`}>\r\n            <RelativeDiv>\r\n              <PosterImage poster_path={poster_path} imageSize={imageSize} />\r\n              <AbsoluteDiv>\r\n                <CinzelText>\r\n                  {name\r\n                    ? name.length > 30\r\n                      ? name.substring(0, 30) + \"...\"\r\n                      : name\r\n                    : title.length > 30\r\n                    ? title.substring(0, 30) + \"...\"\r\n                    : title}\r\n                </CinzelText>\r\n                <span>\r\n                  {first_air_date\r\n                    ? first_air_date.substring(0, 4)\r\n                    : release_date?.substring(0, 4)}\r\n                </span>\r\n                <div>\r\n                  <Star voteAverage={vote_average} />\r\n                  {vote_count > 0 && (\r\n                    <span className=\"text-sm\">({vote_count})</span>\r\n                  )}\r\n                </div>\r\n              </AbsoluteDiv>\r\n            </RelativeDiv>\r\n          </Link>\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n// proptypes 정의\r\n// shape함수 : proptypes는 객체 안의 property는 인식하지 못하네.\r\nContentBox.propTypes = {\r\n  content: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    name: PropTypes.string,\r\n    poster_path: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n    release_date: PropTypes.string,\r\n    first_air_date: PropTypes.string,\r\n  }).isRequired,\r\n  contentType: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContentBox;\r\n","import React from \"react\";\r\n\r\nconst ContentsContainer = ({ children }) => (\r\n  <div className=\"flex z-10 flex-wrap justify-evenly w-full\">{children}</div>\r\n);\r\n\r\nexport default ContentsContainer;\r\n","import React from \"react\";\r\n\r\nconst TextDate = (props) => {\r\n  return <div className=\"text-2xl\">{props.children}</div>;\r\n};\r\n\r\nexport default TextDate;\r\n","import React from \"react\";\r\n\r\nconst TextGenre = (props) => {\r\n  return (\r\n    <span className=\"p-4 mr-3 text-lg bg-black bg-opacity-30 rounded-full\">\r\n      {props.children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TextGenre;\r\n","import React from \"react\";\r\n\r\nconst TextOverview = (props) => {\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <span className=\" text-lg text-gray-400\">{props.children}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextOverview;\r\n","import React from \"react\";\r\n\r\nconst CinzelTitle = ({ children }) => {\r\n  return (\r\n    <div className=\"text-6xl\" style={{ fontFamily: \"Cinzel, serif\" }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CinzelTitle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport YouTube from \"react-youtube\";\r\nimport TextDate from \"../TextDate\";\r\nimport TextGenre from \"../TextGenre\";\r\nimport TextOverview from \"../TextOverview\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CinzelTitle from \"../title/CinzelTitle\";\r\n\r\nconst DetailContainer = ({\r\n  detail: {\r\n    title,\r\n    name,\r\n    release_date,\r\n    first_air_date,\r\n    last_air_date,\r\n    genres,\r\n    overview,\r\n    videos,\r\n    backdrop_path,\r\n    homepage,\r\n    production_companies,\r\n    tagline,\r\n    runtime,\r\n    episode_run_time,\r\n    seasons,\r\n  },\r\n  creditList,\r\n  isVideoFocused,\r\n  isCreditSelected,\r\n  handleVideoClick,\r\n  handleCreditClick,\r\n  handleTagClick,\r\n  isPulse,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"flex\">\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\r\n          alt=\"backdrop\"\r\n          style={{ height: \"92vh\" }}\r\n          className=\"absolute w-screen\"\r\n        />\r\n        <div\r\n          className={`z-0 w-full p-8  text-white bg-black ${\r\n            isVideoFocused ? \"bg-opacity-90\" : \"bg-opacity-50 \"\r\n          } ${isPulse && \"animate-pulse\"} `}\r\n          style={{ height: \"92vh\" }}\r\n        >\r\n          <div className=\"flex justify-between items-center\">\r\n            <div>\r\n              <a\r\n                href={homepage ? homepage : null}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                title=\"home page\"\r\n              >\r\n                <CinzelTitle>{title ? title : name}</CinzelTitle>\r\n              </a>\r\n              <div\r\n                className={`${\r\n                  title ? \"w-32\" : \"w-80\"\r\n                } flex items-center justify-between`}\r\n              >\r\n                <TextDate>\r\n                  {release_date\r\n                    ? release_date.substring(0, 4)\r\n                    : first_air_date.substring(0, 4) +\r\n                      \" ~ \" +\r\n                      last_air_date.substring(0, 4)}\r\n                </TextDate>\r\n                {seasons && <span>{seasons[seasons.length - 1].name}</span>}\r\n                {runtime ? (\r\n                  <span>{runtime} min</span>\r\n                ) : episode_run_time ? (\r\n                  <span>\r\n                    {episode_run_time[episode_run_time.length - 1]} min\r\n                  </span>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            {production_companies?.length > 0 &&\r\n              production_companies[0].logo_path && (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/original/${production_companies[0].logo_path}`}\r\n                  alt=\"logo\"\r\n                  className=\"w-40 h-28 mx-10\"\r\n                  title={`${production_companies[0].name}`}\r\n                />\r\n              )}\r\n          </div>\r\n          <div className=\"my-10\">\r\n            {genres.map((g, index) => (\r\n              <TextGenre key={index}>{g.name}</TextGenre>\r\n            ))}\r\n          </div>\r\n          <div className=\"my-8 \">\r\n            {tagline && (\r\n              <h1 className=\"text-3xl bg-gradient-to-r from-transparent via-indigo-200 to-transparent hover:opacity-100 transition-opacity ease-linear duration-500\">\r\n                <i className=\"fas fa-quote-left relative -top-5 text-sm\"></i>\r\n                <span className=\"mx-8\">{tagline}</span>\r\n              </h1>\r\n            )}\r\n            <TextOverview>{overview.substring(0, 300)}...</TextOverview>\r\n          </div>\r\n          <div className=\"h-80 w-24 pt-4 flex flex-col justify-between items-center\">\r\n            <i\r\n              onClick={handleVideoClick}\r\n              className={`fas z-20 w-16 h-16  ml-3 text-7xl cursor-pointer ${\r\n                isVideoFocused ? \"fa-pause animate-pulse\" : \"fa-play\"\r\n              }`}\r\n              title=\"trailer\"\r\n            />\r\n            {videos && videos.results.length > 0 && isVideoFocused && (\r\n              <YouTube\r\n                videoId={videos.results[0].key}\r\n                // React Youtube 라이브러리 props\r\n                opts={{ playerVars: { autoplay: 1 } }}\r\n                className=\"w-full h-screen absolute -top-2 left-0 z-10\"\r\n              />\r\n            )}\r\n            <div className=\"w-full flex justify-between items-center\">\r\n              <i\r\n                className=\"fas fa-users text-7xl cursor-pointer\"\r\n                onClick={handleCreditClick}\r\n                title=\"credits\"\r\n              />\r\n              {creditList.length > 0 && (\r\n                <div\r\n                  className={`z-0 relative ml-10 mb-7 flex opacity-0 ${\r\n                    isCreditSelected ? \"opacity-100\" : \"\"\r\n                  } transition-opacity ease-in-out duration-300`}\r\n                >\r\n                  {creditList.map((cast, index) => (\r\n                    <Link\r\n                      to={`/people/${cast.id}`}\r\n                      key={index}\r\n                      className=\"w-20 h-20 mr-6 \"\r\n                    >\r\n                      <img\r\n                        src={`https://image.tmdb.org/t/p/original/${cast.profile_path}`}\r\n                        alt=\"profile\"\r\n                        // onLoad event listener\r\n                        onLoad={(event) => {\r\n                          event.target.style.opacity = 100;\r\n                        }}\r\n                        className={`rounded-md opacity-0 transition-opacity ease-in-out duration-300 `}\r\n                        title={cast.original_name}\r\n                      />\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <i\r\n              className=\"fas fa-hashtag text-7xl cursor-pointer\"\r\n              onClick={handleTagClick}\r\n              title=\"keywords\"\r\n            ></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nDetailContainer.propTypes = {\r\n  detail: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    name: PropTypes.string,\r\n    release_date: PropTypes.string,\r\n    first_air_date: PropTypes.string,\r\n    genres: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n        name: PropTypes.string,\r\n      })\r\n    ),\r\n    overview: PropTypes.string,\r\n    videos: PropTypes.shape({\r\n      results: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          key: PropTypes.string,\r\n        })\r\n      ),\r\n    }),\r\n    backdrop_path: PropTypes.string,\r\n    homepage: PropTypes.string,\r\n    production_companies: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        logo_path: PropTypes.string,\r\n        name: PropTypes.string,\r\n      })\r\n    ),\r\n    tagline: PropTypes.string,\r\n    runtime: PropTypes.number,\r\n    episode_run_time: PropTypes.arrayOf(PropTypes.number),\r\n  }).isRequired,\r\n  isVideoFocused: PropTypes.bool.isRequired,\r\n  handleVideoClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\n\r\nconst DetailPageContainer = (props) => {\r\n  return <div className=\"pt-20 bg-black text-white\">{props.children}</div>;\r\n};\r\n\r\nexport default DetailPageContainer;\r\n","import React from \"react\";\r\n\r\nconst CarterTitle = ({ children }) => {\r\n  return (\r\n    <div\r\n      className=\" my-5 ml-3 text-5xl text-white\"\r\n      style={{ fontFamily: \"Carter One, cursive\" }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarterTitle;\r\n","const Loader = () => (\r\n  <i className=\"fas fa-spinner text-5xl animate-spin text-white\"></i>\r\n);\r\n\r\nexport default Loader;\r\n","// 함수 정의\r\nconst saveLocalContentHistory = (name, data) => {\r\n  // method : getItem\r\n  const currentItem = localStorage.getItem(name);\r\n  // if : 현재 item이 있는 경우\r\n  if (currentItem) {\r\n    const parsedItem = JSON.parse(currentItem);\r\n    const sameOne = parsedItem.find((item) => item.id === data.id);\r\n    // if : 이미 같은 item이 있을 경우 setItem 실행 안함.\r\n    if (sameOne) {\r\n      return;\r\n    } else {\r\n      // unshift method : immutable이 아니므로 걍. 그리고 최신순으로 보여주고 싶으므로 push가 아닌 unshift.\r\n      parsedItem.unshift(data);\r\n      const jsonItem = JSON.stringify(parsedItem);\r\n      localStorage.setItem(name, jsonItem);\r\n    }\r\n  } else {\r\n    const newArr = Array.of(data);\r\n    const jsonItem = JSON.stringify(newArr);\r\n    localStorage.setItem(name, jsonItem);\r\n  }\r\n};\r\n\r\nexport default saveLocalContentHistory;\r\n","import React from \"react\";\r\n\r\nconst FullScreenCenter = ({ children }) => {\r\n  return (\r\n    <div className=\"w-screen h-screen flex justify-center items-center bg-black\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullScreenCenter;\r\n","// method : window.scroll()\r\nconst scrollSmooth = (top) => {\r\n  window.scroll({\r\n    top,\r\n    behavior: \"smooth\",\r\n  });\r\n};\r\n\r\nexport default scrollSmooth;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport movieApi from \"../apis/movieApi\";\r\nimport tvApi from \"../apis/tvApi\";\r\nimport ContentBox from \"../components/contentBox/ContentBox\";\r\nimport ContentsContainer from \"../components/ContentsContainer\";\r\nimport DetailContainer from \"../components/detail/DetailContainer\";\r\nimport DetailPageContainer from \"../components/detail/DetailPageContainer\";\r\nimport CarterTitle from \"../components/title/CarterTitle\";\r\nimport { infoContext } from \"../context/InfoContext\";\r\nimport Loader from \"../components/Loader\";\r\nimport saveLocalContentHistory from \"../function/saveLocalHistory\";\r\nimport FullScreenCenter from \"../components/FullScreenCenter\";\r\nimport scrollSmooth from \"../function/scrollSmooth\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst DetailPage = () => {\r\n  // reactRouterDom hooks\r\n  const { id } = useParams();\r\n  const { pathname } = useLocation();\r\n  // useState\r\n  const [detail, setDetail] = useState({});\r\n  const [similarList, setSimilar] = useState({});\r\n  const [keywords, setKewords] = useState([]);\r\n  const [listByKeyword, setListByKeyword] = useState([]);\r\n  const [creditList, setCreditList] = useState([]);\r\n  // conditional state\r\n  const [isVideoFocused, setIsVideoFocused] = useState(false);\r\n  const [isPulse, setIsPulse] = useState(true);\r\n  const [currentContent, setCurrentContent] = useState(\"SIMILAR\");\r\n  const [isCreditSelected, setIsCreditSelected] = useState(false);\r\n  // useContext : 현재 영화인지 티비인지 boolean 값 state\r\n  const { globalFocus, setGlobalFocus } = useContext(infoContext);\r\n  // useRef\r\n  const tagDivRef = useRef();\r\n\r\n  // useEffect : 마운팅 이후 params의 id를 인식한 단계\r\n  useEffect(() => {\r\n    // 함수 정의 : params의 id에 따라 요청\r\n    const fetchData = async () => {\r\n      // try & catch. block scope가 구체적일수록 좋은 듯.\r\n      try {\r\n        // conditional : location이 tv냐 movie냐에 따라서 setState\r\n        if (pathname.includes(\"movie\")) {\r\n          // request promises : movieApi객체의 method들과 return값들\r\n          const { data } = await movieApi.movieById(id);\r\n          const {\r\n            data: { results },\r\n          } = await movieApi.similarById(id, 1);\r\n          const {\r\n            data: { keywords },\r\n          } = await movieApi.keywordsById(id);\r\n\r\n          // function call\r\n          saveLocalContentHistory(\"movie-history\", data);\r\n          // setState\r\n          setDetail(data);\r\n          setKewords(keywords);\r\n          setSimilar(results);\r\n        } else if (pathname.includes(\"tv\")) {\r\n          const { data } = await tvApi.tvById(id);\r\n          const {\r\n            data: { results },\r\n          } = await tvApi.similarById(id, 1);\r\n          const {\r\n            data: { results: keywords },\r\n          } = await tvApi.keywordsById(id);\r\n          // function call\r\n          saveLocalContentHistory(\"tv-history\", data);\r\n          // setState\r\n          setGlobalFocus(\"TV_SHOWS\");\r\n          setDetail(data);\r\n          setSimilar(results);\r\n          setKewords(keywords);\r\n        } else {\r\n          throw new Error(\"there is no such path.\");\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      // setState initialize\r\n      setCreditList([]);\r\n      setIsCreditSelected(false);\r\n    };\r\n    // 함수 호출\r\n    fetchData();\r\n  }, [id, pathname, globalFocus]);\r\n\r\n  // useEffect : data fetch된 data를 setState했을 때 side effect.\r\n  // ! : mounting때의 window scroll은 없다. 그래서 처음엔 scroll이 안됨.\r\n  useEffect(() => {\r\n    // function call\r\n    scrollSmooth(0);\r\n    // if : detail property가 있는지, 즉 data가 실제로 온 이후에 setTimeOut.\r\n    if (detail.id) {\r\n      // setState\r\n      setTimeout(() => setIsPulse(false), 2100);\r\n    }\r\n    return () => setIsPulse(true);\r\n  }, [detail]);\r\n  console.log(\"rendered.\");\r\n  console.log(detail);\r\n  console.log(creditList);\r\n  // 함수 정의 : event handler\r\n  const handleKeywordClick = async (keywordId, keywordName) => {\r\n    const {\r\n      data: { results },\r\n    } = await movieApi.discoverByKeyword(keywordId);\r\n    // setState\r\n    setListByKeyword(results);\r\n    setCurrentContent(keywordName);\r\n  };\r\n  const handleVideoClick = () => {\r\n    isVideoFocused ? setIsVideoFocused(false) : setIsVideoFocused(true);\r\n  };\r\n  const handleCreditClick = async () => {\r\n    // if : credit data를 이미 받아온 경우엔 request 안함.\r\n    if (creditList.length === 0) {\r\n      try {\r\n        if (globalFocus === \"MOVIE\") {\r\n          console.log(\"function executed.\");\r\n          const {\r\n            data: { cast },\r\n          } = await movieApi.credits(id);\r\n          setCreditList(cast.filter((item, index) => index <= 6));\r\n        } else {\r\n          const {\r\n            data: { cast },\r\n          } = await tvApi.credits(id);\r\n          setCreditList(cast.filter((item, index) => index <= 6));\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    // if : boolean\r\n    if (isCreditSelected) setIsCreditSelected(false);\r\n    else setIsCreditSelected(true);\r\n  };\r\n  const handleTagClick = () => {\r\n    // function call\r\n    scrollSmooth(\r\n      tagDivRef.current?.offsetTop - tagDivRef.current?.scrollHeight\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Detail | Popcorn Time</title>\r\n      </Helmet>\r\n      <DetailPageContainer>\r\n        {detail.videos ? (\r\n          <DetailContainer\r\n            detail={detail}\r\n            creditList={creditList}\r\n            isVideoFocused={isVideoFocused}\r\n            isCreditSelected={isCreditSelected}\r\n            isPulse={isPulse}\r\n            handleVideoClick={handleVideoClick}\r\n            handleCreditClick={handleCreditClick}\r\n            handleTagClick={handleTagClick}\r\n          />\r\n        ) : (\r\n          <FullScreenCenter>\r\n            <Loader />\r\n          </FullScreenCenter>\r\n        )}\r\n        <div ref={tagDivRef} className=\"flex flex-wrap\">\r\n          <span\r\n            onClick={() => setCurrentContent(\"SIMILAR\")}\r\n            className=\"mx-3 mt-5 p-3 text-xl cursor-pointer text-white bg-gray-300 bg-opacity-30 rounded-full\"\r\n          >\r\n            similar\r\n          </span>\r\n          {keywords?.length > 0 &&\r\n            keywords.map((k, index) => (\r\n              <span\r\n                onClick={() => handleKeywordClick(k.id, k.name)}\r\n                className=\"mx-3 mt-5 p-3 text-xl cursor-pointer text-white bg-gray-300 bg-opacity-30 rounded-2xl\"\r\n                key={index}\r\n              >\r\n                <i className=\"fas fa-hashtag\"></i> {k.name}\r\n              </span>\r\n            ))}\r\n        </div>\r\n        <CarterTitle>\r\n          {currentContent === \"SIMILAR\" ? (\r\n            globalFocus === \"MOVIE\" ? (\r\n              \"similar movies\"\r\n            ) : (\r\n              \"similar shows\"\r\n            )\r\n          ) : (\r\n            <h1>\r\n              <i className=\"fas fa-hashtag mx-3 -mt-5\"></i>\r\n              {currentContent}\r\n            </h1>\r\n          )}\r\n        </CarterTitle>\r\n        <ContentsContainer>\r\n          {currentContent === \"SIMILAR\"\r\n            ? similarList.length > 0 &&\r\n              similarList.map((item, index) => (\r\n                <ContentBox\r\n                  content={item}\r\n                  contentType={globalFocus}\r\n                  imageSize={200}\r\n                  key={index}\r\n                />\r\n              ))\r\n            : listByKeyword.length > 0 &&\r\n              listByKeyword.map((item, index) => (\r\n                <ContentBox\r\n                  content={item}\r\n                  contentType={globalFocus}\r\n                  imageSize={200}\r\n                  key={index}\r\n                />\r\n              ))}\r\n        </ContentsContainer>\r\n      </DetailPageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","import React from \"react\";\r\n\r\nconst NavLinkBox = (props) => {\r\n  return (\r\n    <div className=\"w-screen h-14 mt-20 fixed z-10 text-4xl px-4 bg-black\">\r\n      <div className=\"flex justify-between\"></div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavLinkBox;\r\n","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { infoContext } from \"../../context/InfoContext\";\r\nimport NavLinkBox from \"./NavLinkBox\";\r\n\r\nconst NavBar = () => {\r\n  const { globalFocus, setGlobalFocus } = useContext(infoContext);\r\n  return (\r\n    <>\r\n      <NavLinkBox>\r\n        <Link\r\n          to=\"/\"\r\n          onClick={() => setGlobalFocus(\"MOVIE\")}\r\n          className={`pb-1 mr-5 border-b-4 border-transparent ${\r\n            globalFocus === \"MOVIE\" && \"border-blue-500\"\r\n          } text-white transition-all ease-linear duration-500`}\r\n          style={{ fontFamily: \"Carter One, cursive\" }}\r\n        >\r\n          Movies\r\n        </Link>\r\n        <Link\r\n          to=\"/tv\"\r\n          onClick={() => setGlobalFocus(\"TV_SHOWS\")}\r\n          className={`pb-1 mr-5 border-b-4 border-transparent ${\r\n            globalFocus === \"TV_SHOWS\" && \"border-blue-500\"\r\n          } text-white transition-all ease-linear duration-500`}\r\n          style={{ fontFamily: \"Carter One, cursive\" }}\r\n        >\r\n          TV shows\r\n        </Link>\r\n        <Link\r\n          to=\"/people\"\r\n          onClick={() => setGlobalFocus(\"PEOPLE\")}\r\n          className={`pb-1 mr-5 border-b-4 border-transparent ${\r\n            globalFocus === \"PEOPLE\" && \"border-blue-500\"\r\n          } text-white transition-all ease-linear duration-500`}\r\n          style={{ fontFamily: \"Carter One, cursive\" }}\r\n        >\r\n          People\r\n        </Link>\r\n      </NavLinkBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst PageContainer = (props) => {\r\n  return (\r\n    // padding bottom 없으면 스크롤 끝 인식이 안되네.\r\n    <div className=\"pt-36 pb-10 bg-black text-white\">{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from \"react\";\r\n\r\nconst PopcornImage = () => (\r\n  <img\r\n    src=\"./popcorn-time.png\"\r\n    alt=\"popcorn-time\"\r\n    onLoad={(event) => {\r\n      event.target.style.opacity = 100;\r\n    }}\r\n    className=\"w-28 h-28 p-2 opacity-0 transition-opacity ease-in-out duration-300\"\r\n  />\r\n);\r\n\r\nexport default PopcornImage;\r\n","import React from \"react\";\r\n\r\nconst PopcornImageWrapper = ({ children, setIsSideBarOpen, isSideBarOpen }) => {\r\n  return (\r\n    <div\r\n      onMouseEnter={() => setIsSideBarOpen(true)}\r\n      className={`fixed z-20 top-80 -left-2 focus:outline-none bg-black bg-opacity-80 rounded-full ${\r\n        isSideBarOpen ? \"transform -translate-x-80 opacity-0\" : \"\"\r\n      } ease-in-out duration-500 delay-100`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PopcornImageWrapper;\r\n","import React from \"react\";\r\n\r\nconst SortButton = ({ children, handleClick, isCurrent }) => {\r\n  return (\r\n    <span\r\n      onClick={handleClick}\r\n      className={`${\r\n        isCurrent\r\n          ? \"text-white border-l-2 bg-gradient-to-r from-indigo-800 via-indigo-500 to-indigo-300\"\r\n          : \"opacity-50\"\r\n      } pl-3 cursor-pointer hover:opacity-100 transition-opacity ease-in-out `}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default SortButton;\r\n","import React from \"react\";\r\n\r\nconst TextSortBy = ({ children }) => (\r\n  <h1\r\n    className=\"mb-4 pl-2 text-2xl text-white\"\r\n    style={{ fontFamily: \"Carter One, cursive\" }}\r\n  >\r\n    {children}\r\n  </h1>\r\n);\r\n\r\nexport default TextSortBy;\r\n","import React from \"react\";\r\nimport SortButton from \"./SortButton\";\r\nimport TextSortBy from \"./TextSortBy\";\r\n\r\nconst SortList = ({ requestAndDispatch, sortType, genres }) => {\r\n  return (\r\n    <>\r\n      <TextSortBy>Sort By</TextSortBy>\r\n      <SortButton\r\n        handleClick={() => {\r\n          // window scroll auto !\r\n          window.scroll({\r\n            top: 0,\r\n            behavior: \"auto\",\r\n          });\r\n          requestAndDispatch.popular();\r\n        }}\r\n        isCurrent={sortType === \"Popular\"}\r\n      >\r\n        Popular\r\n      </SortButton>\r\n      <SortButton\r\n        handleClick={() => {\r\n          window.scroll({\r\n            top: 0,\r\n            behavior: \"auto\",\r\n          });\r\n          requestAndDispatch.topRated();\r\n        }}\r\n        isCurrent={sortType === \"Top-Rated\"}\r\n      >\r\n        Top Rated\r\n      </SortButton>\r\n      {requestAndDispatch.airingToday && (\r\n        <SortButton\r\n          handleClick={() => {\r\n            window.scroll({\r\n              top: 0,\r\n              behavior: \"auto\",\r\n            });\r\n            requestAndDispatch.airingToday();\r\n          }}\r\n          isCurrent={sortType === \"airing-today\"}\r\n        >\r\n          Airing Today\r\n        </SortButton>\r\n      )}\r\n      {genres?.map((genre, index) => (\r\n        <SortButton\r\n          handleClick={() => {\r\n            window.scroll({\r\n              top: 0,\r\n              behavior: \"auto\",\r\n            });\r\n            requestAndDispatch.discoverByGenre(genre.name);\r\n          }}\r\n          isCurrent={sortType === genre.name}\r\n          key={index}\r\n        >\r\n          {genre.name}\r\n        </SortButton>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SortList;\r\n","import React from \"react\";\r\n\r\nconst SortListWrapper = ({ children, isSideBarOpen, setIsSideBarOpen }) => {\r\n  return (\r\n    <div\r\n      onMouseLeave={() => setIsSideBarOpen(false)}\r\n      className={`${\r\n        isSideBarOpen ? \"\" : \"transform -translate-x-20 opacity-0\"\r\n      } h-full w-48 fixed top-32 z-10 pt-8 text-left flex flex-col overflow-auto bg-black text-indigo-100 ease-in-out duration-500`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortListWrapper;\r\n","import React, { useState } from \"react\";\r\nimport PopcornImage from \"./PopcornImage\";\r\nimport PopcornImageWrapper from \"./PopcornImageWrapper\";\r\nimport SortList from \"./SortList\";\r\nimport SortListWrapper from \"./SortListWrapper\";\r\n\r\nconst SideBar = (props) => {\r\n  const [isSideBarOpen, setIsSideBarOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <PopcornImageWrapper\r\n        isSideBarOpen={isSideBarOpen}\r\n        setIsSideBarOpen={setIsSideBarOpen}\r\n      >\r\n        <PopcornImage />\r\n      </PopcornImageWrapper>\r\n      <SortListWrapper\r\n        isSideBarOpen={isSideBarOpen}\r\n        setIsSideBarOpen={setIsSideBarOpen}\r\n      >\r\n        <SortList {...props} />\r\n      </SortListWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { useReducer } from \"react\";\r\n\r\nconst initialState = { sortType: \"\", page: 1, results: null };\r\n\r\nconst useContentsReducer = () => {\r\n  /* 로직\r\n  1. switch & case : dispatch로 type이 들어갈 때마다 switch문을 실행\r\n  2. return : state에 새로운 주솟값 할당. action으로 들어간 모든 인자값을 넣는다.\r\n  3. if conditional : action의 payload인 page가 기존 state의 page보다\r\n  높을 경우 새로운 state를 return한다. 기존의 state객체를 spread하고 \r\n  results array안에다가 기존의 results를 spread하고, action의 results를\r\n  spread하여 새로운 array를  만든다.\r\n  4. return 원리 : return하면 reducer함수는 끝나므로\r\n  밑의 switch문은 실행되지 않는다. \r\n  \r\n  ? : 더 좋은 방법은 없을까?\r\n  ? : switch문 잘 모름.\r\n  ? : 애초에 useReducer에 대한 이해가 부족하다. reducer은 그냥 함수라는 거.\r\n  또한 return하는 객체는 state가 되고, dispatch로는 action을 보낸다는 것.\r\n  결국 state와 setState인데, 조금 복잡해지니깐 바로 헷갈리는 거.\r\n   */\r\n\r\n  // 함수 정의 : reducer\r\n  const reducer = (state, action) => {\r\n    console.log(action);\r\n    // destructuring\r\n    const { type, page, results } = action;\r\n    // 첫번째 분기 : type이 이전과 같은지 다른지에 따라서.\r\n    if (type === state.sortType) {\r\n      // 두번째 분기 : page가 이전과 같은지 다른지에 따라서.\r\n      if (page === state.page + 1) {\r\n        return {\r\n          ...state,\r\n          page,\r\n          results: [...state.results, ...results],\r\n        };\r\n      } else {\r\n        console.log(\"what the fuck?\");\r\n        return state;\r\n      }\r\n      // 세번째 분기 : action의 type이 기존 state의 type과 다른 경우\r\n    } else {\r\n      // 네번째 분기 switch : type에 따라서 state의 type을 아예 새롭게 만든다. 그래서 다음에 type과 state.type을 비교할 수 있게 된다.\r\n      // 원래 case가 여러가지이지만, 귀찮아서 이렇게 바로 집어넣었다.\r\n      switch (type) {\r\n        case type:\r\n          return {\r\n            sortType: type,\r\n            page,\r\n            results,\r\n          };\r\n        default:\r\n          if (!type) {\r\n            throw new Error();\r\n          }\r\n      }\r\n    }\r\n  };\r\n\r\n  // useReducer\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return { state, dispatch };\r\n};\r\nexport default useContentsReducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport movieApi from \"../apis/movieApi\";\r\nimport ContentBox from \"../components/contentBox/ContentBox\";\r\nimport ContentsContainer from \"../components/ContentsContainer\";\r\nimport NavBar from \"../components/navbar/NavBar\";\r\nimport PageContainer from \"../components/PageContainer\";\r\nimport SideBar from \"../components/sideBar/SideBar\";\r\nimport useContentsReducer from \"../hooks/useContentsReducer\";\r\n\r\n/* state관리 실패\r\n한 sort의 page를 넘긴 다음 sort를 바꾸면, 이 경우에는 이전 sort와 page를 기억해서\r\n원래 sort의 그 다음 page state를 갖고 최종적으로 넣게 된다.\r\n애초에 reducer을 섣불리 썼고, state와 useEffect에 미숙했다.\r\n다 풀어헤쳐서 해결하고 싶다.\r\n! : 한 함수에서는 하나의 역할만 실행해야 한다. */\r\n\r\n// 함수 정의 : component\r\nconst MoviePage = () => {\r\n  // hook : useReducer을 씀. 그냥 useState.\r\n  const { state, dispatch } = useContentsReducer();\r\n  const [genres, setGenres] = useState([]);\r\n  console.log(state);\r\n  // useEffect : 마운팅\r\n  useEffect(() => {\r\n    // 함수 호출 : data fetching과 setState를 hook쪽에서 다 해주므로 async 필요 없음. 기본 page를 1로.\r\n    requestAndDispatch.allGenres();\r\n    requestAndDispatch.popular();\r\n  }, []);\r\n  // useEffect : currentType과 page state의 변화를 dependency로.\r\n  useEffect(() => {\r\n    // 함수정의 : event callback\r\n    const handleScroll = () => {\r\n      // window object의 data들\r\n      if (window.innerHeight + window.scrollY !== document.body.offsetHeight) {\r\n        return;\r\n      } else {\r\n        // 로직 : 스크롤 이벤트마다 이 함수가 한 번씩만 실행되도록 해야 한다.\r\n        // if : 스크롤 끝까지 내린 경우. innerHeight, scrollY, offsetHeight\r\n        const switchByType = () => {\r\n          // switch : 현재 type에 따라 분기 처리\r\n          switch (state.sortType) {\r\n            case \"Now-Playing\":\r\n              // 인자값으로 현재 state의 page값을 참고해서 + 1. 즉 다음 페이지 요청.\r\n              return requestAndDispatch.nowPlaying(state.page + 1);\r\n            case \"Up-Coming\":\r\n              return requestAndDispatch.upComing(state.page + 1);\r\n            case \"Popular\":\r\n              return requestAndDispatch.popular(state.page + 1);\r\n            case \"Top-Rated\":\r\n              return requestAndDispatch.topRated(state.page + 1);\r\n            default:\r\n              return requestAndDispatch.discoverByGenre(\r\n                state.sortType,\r\n                state.page + 1\r\n              );\r\n          }\r\n        };\r\n        switchByType();\r\n      }\r\n    };\r\n    // addEventListner : 스크롤 이벤트와 함수 호출\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    // clean up : state가 바뀔 때 이전 state관련된 거 정리하기!\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [state.sortType, state.page]);\r\n\r\n  // 변수 정의 : 함수 property 갖고 있는 객체 할당\r\n  const requestAndDispatch = {\r\n    // ! : event handler로 바로 실행되는 함수의 첫번쨰 인자값은 항상 SyntheticBaseEvent여야 한다.\r\n    // 그래서 버튼 쪽에서 ()=>식으로 함수를 넣어주면 event는 알아서 걸러진다.\r\n    allGenres: async () => {\r\n      try {\r\n        const {\r\n          data: { genres },\r\n        } = await movieApi.allGenres();\r\n        setGenres(genres);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n    discoverByGenre: async (genreName, page = 1) => {\r\n      // find method\r\n      const { id } = genres.find((g) => g.name === genreName);\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await movieApi.discoverByGenre(id, page);\r\n        dispatch({ type: genreName, page, results });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n    nowPlaying: async (page = 1) => {\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await movieApi.nowPlaying(page);\r\n        dispatch({ type: \"Now-Playing\", page, results });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n    upComing: async (page = 1) => {\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await movieApi.upComing(page);\r\n        dispatch({ type: \"Up-Coming\", page, results });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n    popular: async (page = 1) => {\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await movieApi.popular(page);\r\n        dispatch({ type: \"Popular\", page, results });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n    topRated: async (page = 1) => {\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await movieApi.topRated(page);\r\n        dispatch({ type: \"Top-Rated\", page, results });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Movie | Popcorn Time</title>\r\n      </Helmet>\r\n      <NavBar />\r\n      <PageContainer>\r\n        <SideBar\r\n          requestAndDispatch={requestAndDispatch}\r\n          sortType={state.sortType}\r\n          genres={genres}\r\n        />\r\n        <ContentsContainer>\r\n          {state.results?.length > 0 &&\r\n            state.results.map((item, index) => (\r\n              <ContentBox\r\n                content={item}\r\n                contentType={\"MOVIE\"}\r\n                imageSize={300}\r\n                key={index}\r\n              />\r\n            ))}\r\n        </ContentsContainer>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","import { tmdbAxios } from \"./tmdb\";\r\n\r\nconst peopleApi = {\r\n  popular: (page = 1) =>\r\n    tmdbAxios.get(\"/person/popular\", {\r\n      params: {\r\n        page,\r\n      },\r\n    }),\r\n  detail: (id) => tmdbAxios.get(`/person/${id}`),\r\n  images: (id) => tmdbAxios.get(`/person/${id}/images`),\r\n  movieCredits: (id) => tmdbAxios.get(`/person/${id}/movie_credits`),\r\n};\r\nexport default peopleApi;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport peopleApi from \"../apis/peopleApi\";\r\nimport CarterTitle from \"../components/title/CarterTitle\";\r\nimport FullScreenCenter from \"../components/FullScreenCenter\";\r\nimport Loader from \"../components/Loader\";\r\nimport NavBar from \"../components/navbar/NavBar\";\r\nimport PageContainer from \"../components/PageContainer\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PeoplePage = () => {\r\n  // useState\r\n  const [page, setPage] = useState(1);\r\n  const [peopleResults, setPeopleResults] = useState([]);\r\n  // useEffect : mounting\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const {\r\n        data: { results },\r\n      } = await peopleApi.popular();\r\n      setPeopleResults(results);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  // useEffect : people data state\r\n  useEffect(() => {\r\n    // 함수 정의\r\n    const handleScroll = () => {\r\n      if (window.innerHeight + window.scrollY !== document.body.offsetHeight) {\r\n        return;\r\n      } else {\r\n        // setState\r\n        setPage((prev) => prev + 1);\r\n      }\r\n    };\r\n    // event listener\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [peopleResults]);\r\n  // useEffect : page state\r\n  useEffect(() => {\r\n    // 함수 정의\r\n    const fetchData = async () => {\r\n      const {\r\n        data: { results },\r\n      } = await peopleApi.popular(page);\r\n      // setState\r\n      setPeopleResults((prev) => [...prev, ...results]);\r\n    };\r\n    // function call\r\n    if (page > 1) fetchData();\r\n  }, [page]);\r\n  console.log(peopleResults);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>People | Popcorn Time</title>\r\n      </Helmet>\r\n      <NavBar />\r\n      <PageContainer>\r\n        <CarterTitle>Sorted by popularity</CarterTitle>\r\n        <div className=\"flex flex-wrap justify-around\">\r\n          {peopleResults.length > 0 ? (\r\n            peopleResults.map((person, index) => (\r\n              <div className=\"flex ml-3\" key={index}>\r\n                <Link to={`/people/${person.id}`}>\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/original${person.profile_path}`}\r\n                    alt=\"person\"\r\n                    className=\"w-72 h-96\"\r\n                  />\r\n                  <span>{person.name}</span>\r\n                </Link>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <FullScreenCenter>\r\n              <Loader />\r\n            </FullScreenCenter>\r\n          )}\r\n        </div>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PeoplePage;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport tvApi from \"../apis/tvApi\";\r\nimport ContentBox from \"../components/contentBox/ContentBox\";\r\nimport ContentsContainer from \"../components/ContentsContainer\";\r\nimport NavBar from \"../components/navbar/NavBar\";\r\nimport PageContainer from \"../components/PageContainer\";\r\nimport SideBar from \"../components/sideBar/SideBar\";\r\nimport { infoContext } from \"../context/InfoContext\";\r\nimport useContentsReducer from \"../hooks/useContentsReducer\";\r\n\r\nconst TVPage = () => {\r\n  // useReducer Hook\r\n  const { state, dispatch } = useContentsReducer();\r\n  console.log(state);\r\n  const [genres, setGenres] = useState([]);\r\n  console.log(genres);\r\n  const { setIsMovie } = useContext(infoContext);\r\n  // useEffect : 마운팅 단계\r\n  useEffect(() => {\r\n    requestAndDispatch.allGenres();\r\n    requestAndDispatch.airingToday(1);\r\n  }, []);\r\n  // useEffect : state의 변화에 따라서.\r\n  useEffect(() => {\r\n    // addEventListner : 스크롤 이벤트\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    // clean up\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [state.sortType, state.page]);\r\n  // 변수 정의 : 함수 property 가진 객체\r\n  const requestAndDispatch = {\r\n    allGenres: async () => {\r\n      try {\r\n        const {\r\n          data: { genres },\r\n        } = await tvApi.allGenres();\r\n        setGenres(genres);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n    discoverByGenre: async (genreName, page = 1) => {\r\n      const genre = genres.find((g) => g.name === genreName);\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await tvApi.discoverByGenre(genre.id, page);\r\n        dispatch({ type: genreName, page, results });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n    airingToday: async (page = 1) => {\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await tvApi.airingToday(page);\r\n        dispatch({ type: \"airing-today\", page, results });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n    popular: async (page = 1) => {\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await tvApi.popular(page);\r\n        dispatch({ type: \"Popular\", page, results });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n    topRated: async (page = 1) => {\r\n      try {\r\n        const {\r\n          data: { results },\r\n        } = await tvApi.topRated(page);\r\n        dispatch({ type: \"Top-Rated\", page, results });\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    },\r\n  };\r\n  // 함수 정의 : event callback\r\n  const handleScroll = () => {\r\n    // innerHeight, scrollY, offsetHeight\r\n    if (window.innerHeight + window.scrollY < document.body.offsetHeight) {\r\n      return;\r\n    } else {\r\n      // ? : 여기서 setTimeout함수를 호출하는 것보다 더 좋은 방법이 있을까? 0.1초라도 기다리게 되는게 맘에 안든다.\r\n      const switchByType = () => {\r\n        switch (state.sortType) {\r\n          case \"airing-today\":\r\n            return requestAndDispatch.airingToday(state.page + 1);\r\n          case \"Popular\":\r\n            return requestAndDispatch.popular(state.page + 1);\r\n          case \"Top-Rated\":\r\n            return requestAndDispatch.topRated(state.page + 1);\r\n          default:\r\n            return requestAndDispatch.discoverByGenre(\r\n              state.sortType,\r\n              state.page + 1\r\n            );\r\n        }\r\n      };\r\n      switchByType();\r\n    }\r\n  };\r\n  console.log(state.results);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>TV | Popcorn Time</title>\r\n      </Helmet>\r\n      <NavBar />\r\n      <PageContainer>\r\n        <SideBar\r\n          requestAndDispatch={requestAndDispatch}\r\n          sortType={state.sortType}\r\n          genres={genres}\r\n        />\r\n        <ContentsContainer>\r\n          {state.results &&\r\n            state.results.map((t, index) => (\r\n              <ContentBox\r\n                content={t}\r\n                contentType={\"TV_SHOWS\"}\r\n                imageSize={300}\r\n                key={index}\r\n              />\r\n            ))}\r\n        </ContentsContainer>\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TVPage;\r\n","import CarterTitle from \"../components/title/CarterTitle\";\r\nimport ContentBox from \"../components/contentBox/ContentBox\";\r\nimport ContentsContainer from \"../components/ContentsContainer\";\r\nimport DetailPageContainer from \"../components/detail/DetailPageContainer\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst UserPage = () => {\r\n  const movieHistory = JSON.parse(localStorage.getItem(\"movie-history\"));\r\n  const tvHistory = JSON.parse(localStorage.getItem(\"tv-history\"));\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>User | Popcorn Time</title>\r\n      </Helmet>\r\n      <DetailPageContainer>\r\n        <CarterTitle>You watched ... </CarterTitle>\r\n        <CarterTitle>Movies</CarterTitle>\r\n        <ContentsContainer>\r\n          {movieHistory?.length > 0\r\n            ? movieHistory.map((item, index) => (\r\n                <ContentBox\r\n                  content={item}\r\n                  contentType={\"MOVIE\"}\r\n                  imageSize={200}\r\n                  key={index}\r\n                />\r\n              ))\r\n            : \"you haven't watched.\"}\r\n        </ContentsContainer>\r\n        <CarterTitle>TV shows</CarterTitle>\r\n        <ContentsContainer>\r\n          {tvHistory?.length > 0\r\n            ? tvHistory.map((item, index) => (\r\n                <ContentBox\r\n                  content={item}\r\n                  contentType={\"TV_SHOWS\"}\r\n                  imageSize={200}\r\n                  key={index}\r\n                />\r\n              ))\r\n            : \"you haven't watched.\"}\r\n        </ContentsContainer>\r\n      </DetailPageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport movieApi from \"../apis/movieApi\";\r\nimport tvApi from \"../apis/tvApi\";\r\nimport CarterTitle from \"../components/title/CarterTitle\";\r\nimport ContentBox from \"../components/contentBox/ContentBox\";\r\nimport ContentsContainer from \"../components/ContentsContainer\";\r\nimport DetailPageContainer from \"../components/detail/DetailPageContainer\";\r\nimport FullScreenCenter from \"../components/FullScreenCenter\";\r\nimport Loader from \"../components/Loader\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst SearchPage = () => {\r\n  //   useState\r\n  const [movieResults, setMovieResults] = useState([]);\r\n  const [tvResults, setTvResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  //   useParams : url로 넣은 string값을 인식\r\n  const { term } = useParams();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const fetchData = async () => {\r\n      try {\r\n        const {\r\n          data: { results: movie },\r\n        } = await movieApi.search(term);\r\n        const {\r\n          data: { results: tv },\r\n        } = await tvApi.search(term);\r\n        //  setState : 두 api에서 온 array를 한 array로 만들어 준다.\r\n        setMovieResults(movie);\r\n        setTvResults(tv);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n    // useEffect의 dependency : state만 trigger로 쓰라는 법 없음. term이 바뀔 때마다 effect 실행.\r\n  }, [term]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Search | Popcorn Time</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <FullScreenCenter>\r\n          <Loader />\r\n        </FullScreenCenter>\r\n      ) : (\r\n        <DetailPageContainer>\r\n          <CarterTitle>movie searched</CarterTitle>\r\n          <ContentsContainer>\r\n            {movieResults.length > 0 &&\r\n              movieResults.map((m, index) => (\r\n                <ContentBox\r\n                  content={m}\r\n                  contentType={\"MOVIE\"}\r\n                  imageSize={300}\r\n                  key={index}\r\n                />\r\n              ))}\r\n          </ContentsContainer>\r\n          <CarterTitle>Tv show searched</CarterTitle>\r\n          <ContentsContainer>\r\n            {tvResults.length > 0 &&\r\n              tvResults.map((t, index) => (\r\n                <ContentBox\r\n                  content={t}\r\n                  contentType={\"TV_SHOWS\"}\r\n                  imageSize={300}\r\n                  key={index}\r\n                />\r\n              ))}\r\n          </ContentsContainer>\r\n        </DetailPageContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\nimport peopleApi from \"../apis/peopleApi\";\r\nimport ContentBox from \"../components/contentBox/ContentBox\";\r\nimport FullScreenCenter from \"../components/FullScreenCenter\";\r\nimport Loader from \"../components/Loader\";\r\nimport { infoContext } from \"../context/InfoContext\";\r\n\r\nconst PersonPage = () => {\r\n  // useParams\r\n  const { id } = useParams();\r\n  //   useState\r\n  const [details, setDetails] = useState({});\r\n  const [philmography, setPhilmography] = useState([]);\r\n  // useContext\r\n  const { setGlobalFocus } = useContext(infoContext);\r\n  // useEffect : mounting\r\n  useEffect(() => {\r\n    // 함수 정의 : asynchronous\r\n    const fetchData = async () => {\r\n      const { data } = await peopleApi.detail(id);\r\n      const {\r\n        data: { cast },\r\n      } = await peopleApi.movieCredits(id);\r\n      const arrByPopularity = cast.sort((a, b) => b.popularity - a.popularity);\r\n      // setState\r\n      setDetails(data);\r\n\r\n      setPhilmography(arrByPopularity);\r\n    };\r\n    // function call\r\n    fetchData();\r\n    // window scroll method\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n    // setState\r\n    //  부실하다ㅋㅋ\r\n    setGlobalFocus(\"MOVIE\");\r\n  }, []);\r\n  console.log(details);\r\n  console.log(philmography);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Celebrity | Popcorn Time</title>\r\n      </Helmet>\r\n      <div className=\"pt-20 bg-black text-white\">\r\n        {details.id ? (\r\n          <div className=\" h-1/2 ml-4 flex flex-wrap\">\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/original/${details.profile_path}`}\r\n              alt={details.name}\r\n              className=\"w-1/4 h-1/2 mr-20\"\r\n            />\r\n            <div className=\"mt-4\">\r\n              <h1 className=\"mb-5 text-5xl\">{details.name}</h1>\r\n              <h1 className=\"text-3xl my-3 text-gray-400\">Place of birth</h1>\r\n              <h3 className=\"mb-5 text-xl \">{details.place_of_birth}</h3>\r\n              {details.homepage && (\r\n                <a href={details.homepage}>\r\n                  <h1>home page!</h1>\r\n                </a>\r\n              )}\r\n              <h1 className=\"text-3xl text-gray-400 my-3\">Biography</h1>\r\n              <span> {details.biography}</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <FullScreenCenter>\r\n            <Loader />\r\n          </FullScreenCenter>\r\n        )}\r\n        <h1 className=\"ml-4 text-3xl text-gray-400 my-3\">Philmography</h1>\r\n        <div className=\"flex flex-wrap justify-between \">\r\n          {philmography.length > 0 &&\r\n            philmography.map((item, index) => (\r\n              <ContentBox\r\n                content={item}\r\n                contentType={item.title ? \"MOVIE\" : \"TV_SHOWS\"}\r\n                imageSize={200}\r\n                key={index}\r\n              />\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersonPage;\r\n","const HeaderWrapper = ({ children }) => {\r\n  return (\r\n    <div className=\"fixed z-50 w-screen flex justify-between items-center px-10 bg-black shadow-2xl\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderWrapper;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Logo = ({ globalFocus }) => (\r\n  <>\r\n    <Link\r\n      to={\r\n        globalFocus === \"MOVIE\"\r\n          ? \"/\"\r\n          : globalFocus === \"TV_SHOWS\"\r\n          ? \"/tv\"\r\n          : globalFocus === \"PEOPLE\" && \"/people\"\r\n      }\r\n    >\r\n      <img\r\n        src=\"https://popcorntime-online.ch/css/images/logo.svg\"\r\n        alt=\"popcorn-time\"\r\n        className=\"w-64 h-20\"\r\n      />\r\n    </Link>\r\n  </>\r\n);\r\n\r\nexport default Logo;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst SearchForm = () => {\r\n  // useState : input의 텍스트를 다룸. string값.\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [isSearchBar, setIsSearchBar] = useState(false);\r\n  const inputRef = useRef();\r\n  // 변수 정의 : useHistory 값\r\n  const history = useHistory();\r\n  // useEffect : pathname\r\n  useEffect(() => {\r\n    // ! : history.listen함수로 useLocation을 대체할 수 있음. HTML5 API의 기능.\r\n    history.listen((location) => {\r\n      if (!location.pathname.includes(\"/search\")) setInputText(\"\");\r\n      else return;\r\n    });\r\n  }, [history]);\r\n  // useEffect : state\r\n  useEffect(() => {\r\n    const { current } = inputRef;\r\n    if (current) {\r\n      current.focus();\r\n      current.addEventListener(\"focusout\", handleEvent.focusOut);\r\n    }\r\n    // clean up\r\n    return () => current.removeEventListener(\"focusout\", handleEvent.focusOut);\r\n  }, [isSearchBar]);\r\n  // 변수 정의 : 객체\r\n  const handleEvent = {\r\n    // 함수 정의 : submit할 때 실행\r\n    submit: (event) => {\r\n      event.preventDefault();\r\n      // fuction call : react-router로 url을 움직인다.\r\n      history.push(`/search/${inputText}`);\r\n      setIsSearchBar(false);\r\n    },\r\n    change: (event) => {\r\n      setInputText(event.target.value);\r\n    },\r\n    keyDown: (event) => {\r\n      if (event.key === \"Escape\") setIsSearchBar(false);\r\n      else return;\r\n    },\r\n    focusOut: () => {\r\n      setIsSearchBar(false);\r\n    },\r\n    clickImoticon: () => {\r\n      setIsSearchBar(true);\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <form\r\n        onSubmit={(e) => handleEvent.submit(e)}\r\n        className={`text-center ${\r\n          isSearchBar ? \"transform -translate-x-20 z-10\" : \"opacity-0\"\r\n        } absolute right-0 transition-all ease-in-out duration-500`}\r\n      >\r\n        <input\r\n          value={inputText}\r\n          ref={inputRef}\r\n          onChange={handleEvent.change}\r\n          onKeyDown={handleEvent.keyDown}\r\n          className={`px-5 py-4 text-xl rounded-xl bg-gradient-to-r from-black to-gray-600 text-white cursor-default focus:outline-none `}\r\n          type=\"text\"\r\n          placeholder=\"search for...\"\r\n          spellCheck=\"false\"\r\n        />\r\n      </form>\r\n      <i\r\n        className={`fas fa-search z-0 px-3 py-2 text-3xl rounded-full text-white bg-gray-700 bg-opacity-0 hover:bg-opacity-100 transition-colors ease-in-out duration-300 ${\r\n          isSearchBar && \"opacity-0\"\r\n        }`}\r\n        onClick={handleEvent.clickImoticon}\r\n      ></i>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { infoContext } from \"../../context/InfoContext\";\r\nimport HeaderWrapper from \"./HeaderWrapper\";\r\nimport Logo from \"./Logo\";\r\nimport SearchForm from \"./SearchForm\";\r\n\r\nconst Header = () => {\r\n  const { globalFocus } = useContext(infoContext);\r\n  return (\r\n    <HeaderWrapper>\r\n      <Logo globalFocus={globalFocus} />\r\n      <div className=\"flex items-center\">\r\n        <Link to=\"/user\" className=\"z-10 text-white\">\r\n          <i class=\"fas fa-history text-3xl mr-5\"></i>\r\n        </Link>\r\n        <SearchForm />\r\n      </div>\r\n    </HeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport {\r\n  DetailPage,\r\n  MoviePage,\r\n  PeoplePage,\r\n  TVPage,\r\n  UserPage,\r\n  SearchPage,\r\n  PersonPage,\r\n} from \"./pages\";\r\nimport Header from \"./components/header\";\r\n\r\n/* 로직\r\n1. BrowserRouter : 여러 페이지를 쓰기 위한 함수.\r\n2. Switch : uru에 가장 먼저 match되는 하나의 component만 호출한다.\r\n3. Route : 각 path에 대해 component를 할당한다.\r\n4. Redirect : 기타등등 path가 들어가면 일단 movie page로 이동. \r\n */\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Header />\r\n    <Switch>\r\n      <Route exact path=\"/\" component={MoviePage} />\r\n      <Route exact path=\"/movie/:id\" component={DetailPage} />\r\n      <Route exact path=\"/tv\" component={TVPage} />\r\n      <Route exact path=\"/tv/:id\" component={DetailPage} />\r\n      <Route exact path=\"/search/:term\" component={SearchPage} />\r\n      <Route exact path=\"/people\" component={PeoplePage} />\r\n      <Route exact path=\"/people/:id\" component={PersonPage} />\r\n      <Route exact path=\"/user\" component={UserPage} />\r\n      <Redirect from=\"/*\" to=\"/\" />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from \"react\";\r\nimport InfoContextProvider from \"./context/InfoContext\";\r\nimport Router from \"./Router\";\r\nimport \"./styles/style.css\";\r\nimport \"./styles/custom.css\";\r\n\r\n/* App function\r\npure function이다. 다른 component함수들을 자식으로써 호출하고,\r\n그 return값들을 fragment로 싼 하나의 값을 return한다. \r\n! : 다른 method들처럼, Component들도 그 안에 자식이 얼마나 있든\r\n하나의 값을 return하도록 약속이 되어있는 것 같다. */\r\n\r\nconst App = () => (\r\n  <>\r\n    <InfoContextProvider>\r\n      <Router />\r\n    </InfoContextProvider>\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import reactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n/* execution context관점에서\r\n1. index부터 실행하는 것 같다. 그러므로 global execution context는 여기서부터\r\n2. App함수가 인자값으로써 호출되면, 제어권을 가진 reactDom.render() 함수가 \r\nApp의 return값을 갖고 프론트에 렌더링한다. 달리 말하면 html파일의 #root 요소에\r\n넣는다. */\r\n\r\n/* reactDom.render()\r\n? : React가 여기서부터 개입하는건가?\r\n? : 결국 createElement와 appendChild 함수를 쓰는 JS의 DOM과 같은 원리인가?\r\n? : virtual Dom개념. 이전 state와 이후 state의 비교.\r\n\r\n */\r\n\r\nconst element = <App />;\r\n\r\nconst container = document.querySelector(\"#root\");\r\n\r\nreactDom.render(element, container);\r\n"],"sourceRoot":""}